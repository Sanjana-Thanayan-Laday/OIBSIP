import java.util.Scanner;
import java.util.ArrayList;

class User {
    private String userID;
    private int userPIN;
    private ArrayList<String> transactionHistory;

    public User(String id, int pin) {
        userID = id;
        userPIN = pin;
        transactionHistory = new ArrayList<>();
    }

    public String getUserID() {
        return userID;
    }

    public boolean verifyPIN(int pin) {
        return userPIN == pin;
    }

    public void addTransaction(String transaction) {
        transactionHistory.add(transaction);
    }

    public void showTransactionHistory() {
        System.out.println("Transaction History:");
        for (String transaction : transactionHistory) {
            System.out.println(transaction);
        }
    }
}

class ATM {
    private User currentUser;
    private Scanner scanner;

    public ATM() {
        scanner = new Scanner(System.in);
    }

    public void start() {
        System.out.println("Welcome to the ATM");
        System.out.print("Enter User ID: ");
        String userID = scanner.next();
        System.out.print("Enter PIN: ");
        int pin = scanner.nextInt();

        // Simulating a user (in a real scenario, this data would come from a database)
        User user = new User("user123", 1234);

        if (userID.equals(user.getUserID()) && user.verifyPIN(pin)) {
            currentUser = user;
            showOptions();
        } else {
            System.out.println("Invalid credentials. Exiting.");
        }
    }

    public void showOptions() {
        int choice;
        do {
            System.out.println("\nChoose an option:");
            System.out.println("1. Show Transaction History");
            System.out.println("2. Withdraw");
            System.out.println("3. Deposit");
            System.out.println("4. Transfer");
            System.out.println("5. Quit");

            choice = scanner.nextInt();
            scanner.nextLine(); // Clear the buffer

            switch (choice) {
                case 1:
                    currentUser.showTransactionHistory();
                    break;
                case 2:
                    break;
                case 3:
                    break;
                case 4:
                    break;
                case 5:
                    System.out.println("Exiting. Thank you!");
                    break;
                default:
                    System.out.println("Invalid choice. Try again.");
                    break;
            }
        } while (choice != 5);
    }
}

public class Main {
    public static void main(String[] args) {
        ATM atm = new ATM();
        atm.start();
    }
}
